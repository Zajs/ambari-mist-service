<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
  <property>
     <name>content</name>
     <description>This is the  template for docker.conf file</description>
     <value>
        # spark master
        mist.context-defaults.spark-conf = {
          spark.master = "local[*]"
        }

        mist.http.on = true
        mist.http.host = "0.0.0.0"
        mist.http.port = 2003
        mist.http.router-config-path = "/usr/share/mist/configs/router.conf"

        mist.mqtt.on = true
        mist.mqtt.host = "mosquitto"
        mist.mqtt.port = 1883
        mist.mqtt.subscribe-topic = "foo"
        mist.mqtt.publish-topic = "foo"

        mist.recovery.on = false
        mist.recovery.multilimit = 10
        mist.recovery.typedb = "MapDb"
        mist.recovery.dbfilename = "file.db"

        mist.workers.runner = "local" # or "local", or "docker"
        mist.workers.docker-host = "localhost" # default for unix socker
        mist.workers.docker-port = 80

        mist.context.foo.timeout = 100 days

        mist.context-defaults.disposable = false

        mist.context.streaming.timeout = Inf

        mist.context-settings.onstart = ["foo"]

        mist.context.foo.spark-conf = {
          spark.default.parallelism = 4
          spark.driver.memory = "1024m"
          spark.executor.memory = "512m"
          spark.scheduler.mode = "FAIR"
        }

        mist.akka {
          remote {
            log-remote-lifecycle-events = off
            log-recieved-messages = off
            netty.tcp {
              hostname = ""
            }
            transport-failure-detector {
              heartbeat-interval = 30s
              acceptable-heartbeat-pause = 5s
            }
          }
          # Event handlers to register at boot time (Logging$DefaultLogger logs to STDOUT)
          loggers = ["akka.event.Logging$DefaultLogger"]
          cluster {
            seed-nodes = ["akka.tcp://mist@leader:2551"]
            auto-down-unreachable-after = 10s
          }
        }
    </value>
  </property>

</configuration>
